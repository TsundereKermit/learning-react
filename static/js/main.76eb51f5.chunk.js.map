{"version":3,"sources":["Clock.js","Navbar.js","Home.js","Timer.js","TimerForm.js","Error.js","Stopwatch.js","AppControl.js","App.js","index.js"],"names":["Clock","props","state","date","Date","this","clockID","setInterval","tick","clearInterval","setState","className","toLocaleDateString","toLocaleTimeString","Component","Navbar","homeSubmit","navSubmit","navTimerSubmit","stopwatchSubmit","href","rel","target","onClick","Home","Timer","initialState","hour","minute","second","TimerForm","sfx","custom","url","handleChange","event","name","value","submitTimerForm","timerSubmit","resetTimer","reset","sfxChange","customSfx","id","htmlFor","type","onChange","placeholder","form","Error","reason","data-dismiss","aria-hidden","Stopwatch","timerStarted","startStopwatch","stopwatchID","SWtick","pauseStopwatch","resetStopwatch","StartStop","AppControl","element","App","err_reason","timerID","tickdown","sfxString","audioPromise","Audio","play","undefined","then","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76eb51f5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clockID = setInterval(\r\n            () => \r\n            this.tick(), \r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.clockID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"navbar-text\">\r\n                {this.state.date.toLocaleDateString()\r\n                + ' '\r\n                + this.state.date.toLocaleTimeString()}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, {Component} from 'react';\r\nimport Clock from './Clock';\r\n\r\nclass Navbar extends Component {\r\n    homeSubmit = () => {\r\n        this.props.navSubmit('');\r\n    }\r\n\r\n    navTimerSubmit = () => {\r\n        this.props.navSubmit('timer');\r\n    }\r\n\r\n    stopwatchSubmit = () => {\r\n        this.props.navSubmit('stopwatch');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                <a className=\"navbar-brand\" href=\"https://github.com/TsundereKermit\" rel=\"noopener noreferrer\" target=\"_blank\">TsundereKermit</a>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\" href=\"#\" onClick={this.homeSubmit}>Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\" href=\"#\" onClick={this.navTimerSubmit}>Timer</a>\r\n                    </li>\r\n                    <li>\r\n                        {/* eslint-disable-next-line */}\r\n                        <a className=\"nav-link\" href=\"#\" onClick={this.stopwatchSubmit}>Stopwatch</a>\r\n                    </li>\r\n                </ul>\r\n                <Clock />\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\n\r\nclass Home extends Component {  \r\n    render() {\r\n        return (\r\n            <h1>homepage, i guess.</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\n\r\nclass Timer extends Component {\r\n    initialState = {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second} = this.props;\r\n\r\n        return (\r\n            <h1 className=\"mb-3\">\r\n                {hour + \" Hours \" +\r\n                minute + \" Minutes \" +\r\n                second + \" Seconds\"}\r\n            </h1>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Timer;","import React, {Component} from 'react';\r\n\r\nclass TimerForm extends Component {\r\n\r\n    initialState = {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0,\r\n        sfx: \"bruh sound effect 2\",\r\n        custom: false,\r\n        url: '',\r\n    }\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitTimerForm = () => {\r\n        this.props.timerSubmit(this.state.hour, this.state.minute, this.state.second, this.state.sfx, this.state.url);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    resetTimer = () => {\r\n        this.setState(this.initialState);\r\n        this.props.reset();\r\n    }\r\n\r\n    sfxChange = event => {\r\n        if (event.target.value !== \"custom\") {\r\n            this.setState({sfx: event.target.value});\r\n        } else {\r\n            this.setState({\r\n                custom: true,\r\n                sfx: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    customSfx = () => {\r\n        this.setState({custom: true});\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second, url} = this.state;\r\n\r\n        return (\r\n            <form id=\"timerForm\">\r\n                <label htmlFor=\"hour\">Hours</label>\r\n                <input type=\"number\" className=\"form-control mb-2\" name=\"hour\" id=\"hour\" value={hour} onChange={this.handleChange} />\r\n                <label htmlFor=\"minute\">Minutes</label>\r\n                <input type=\"number\" className=\"form-control mb-2\" name=\"minute\" id=\"minute\" value={minute} onChange={this.handleChange} />\r\n                <label htmlFor=\"second\">Seconds</label>\r\n                <input type=\"number\" className=\"form-control mb-2\" name=\"second\" id=\"second\" value={second} onChange={this.handleChange} />\r\n                <label htmlFor=\"sfx\">Sound effect</label>\r\n                <select className=\"form-control mb-2\" value={this.state.sfx} onChange={this.sfxChange}>\r\n                    <option value=\"bruh sound effect 2\">bruh sound effect 2</option>\r\n                    <option value=\"how dare you\">how dare you</option>\r\n                    <option value=\"hello there\">hello there</option>\r\n                    <option value=\"custom\">custom</option>\r\n                </select>\r\n                {this.state.custom && \r\n                <input className=\"form-control\" type=\"url\" placeholder=\"Enter your sound effect's URL here\" id=\"url\" name=\"url\" value={url} onChange={this.handleChange} />}\r\n                <div className=\"divider-v\"></div>\r\n                <div>\r\n                    <input type=\"button\" className=\"btn btn-primary\" value=\"Start timer\" form=\"timerForm\" onClick={this.submitTimerForm} />\r\n                    <div className=\"divider-h\"></div>\r\n                    <input type=\"button\" className=\"btn btn-secondary\" value=\"Reset\" onClick={this.resetTimer} />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimerForm;","import React, {Component} from 'react';\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        if (this.props.reason === \"\") {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-primary alert-dismissable fade show\">\r\n                    {this.props.reason}\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n    initialState = {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0,\r\n        timerStarted: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    startStopwatch = () => {\r\n        this.stopwatchID = setInterval(() => this.SWtick(), 1000);\r\n        this.setState({timerStarted: true});\r\n    }\r\n\r\n    SWtick = () => {\r\n        const {hour, minute, second} = this.state;\r\n\r\n        if (minute === 59 && second === 59) {\r\n            this.setState({\r\n                hour: hour + 1,\r\n                minute: 0,\r\n                second: 0,\r\n            });\r\n        } else if (second === 59) {\r\n            this.setState({\r\n                minute: minute + 1,\r\n                second: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                second: second + 1,\r\n            })\r\n        }\r\n    }\r\n\r\n    pauseStopwatch = () => {\r\n        clearInterval(this.stopwatchID);\r\n        this.setState({timerStarted: false});\r\n    }\r\n\r\n    resetStopwatch = () => {\r\n        this.setState(this.initialState);\r\n        clearInterval(this.stopwatchID);\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second} = this.state;\r\n        \r\n        return (\r\n            <div>\r\n                <h1 className=\"mb-3\">\r\n                    {hour + \" Hours \" +\r\n                    minute + \" Minutes \" +\r\n                    second + \" Seconds\"}\r\n                </h1>\r\n                <StartStop timerStarted={this.state.timerStarted} startStopwatch={this.startStopwatch} pauseStopwatch={this.pauseStopwatch} />\r\n                <div className=\"divider-h\"></div>\r\n                <button className=\"btn btn-secondary\" onClick={this.resetStopwatch}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst StartStop = props => {\r\n    const {timerStarted, startStopwatch, pauseStopwatch} = props;\r\n\r\n    if (timerStarted) {\r\n        return <button className=\"btn btn-primary\" onClick={pauseStopwatch}>Pause</button>;\r\n    } else {\r\n        return <button className=\"btn btn-primary\" onClick={startStopwatch}>Start</button>;\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React, {Component} from 'react';\r\nimport Home from './Home';\r\nimport Timer from './Timer';\r\nimport TimerForm from './TimerForm';\r\nimport Error from './Error';\r\nimport Stopwatch from './Stopwatch';\r\n\r\nclass AppControl extends Component {\r\n    render() {\r\n        if (this.props.element === '') {\r\n            return (\r\n                <Home />\r\n            );\r\n        } else if (this.props.element === 'timer') {\r\n            return (\r\n                <div>\r\n                    <Timer hour={this.props.hour} minute={this.props.minute} second={this.props.second} />\r\n                    <Error reason={this.props.reason} />\r\n                    <TimerForm timerSubmit={this.props.timerSubmit} reset={this.props.reset} />\r\n                </div>\r\n            );\r\n        } else if (this.props.element === 'stopwatch') {\r\n            return (\r\n                <Stopwatch />\r\n            )\r\n        } else {\r\n            return (null);\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppControl;","import React, {Component} from 'react';\r\nimport Navbar from './Navbar';\r\nimport AppControl from './AppControl';\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0, \r\n            err_reason: '',\r\n            element: '',\r\n            sfx: '',\r\n            timerStarted: false,\r\n            url: '',\r\n        };\r\n    }\r\n\r\n    timerSubmit = (hour, minute, second, sfx, url) => {\r\n        if (hour < 0 || minute < 0 || second < 0) {\r\n            this.setState({\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0,\r\n                sfx: '',\r\n                timerStarted: false,\r\n                err_reason: \"Due to special relativity, negative time is not accepted as of this moment.\",\r\n                url: '',\r\n            });\r\n        } else if (minute > 59 || second > 60 || hour%1 !== 0 || minute%1 !== 0 || second%1 !== 0) {\r\n            this.setState({\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0,\r\n                sfx: '',\r\n                timerStarted: false,\r\n                err_reason: \"Becaused we're civilized, we use the international standard notation for time here.\",\r\n                url: '',\r\n            });\r\n        } else if (hour === 0 && minute === 0 && second === 0) {\r\n            this.setState({\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0,\r\n                sfx: '',\r\n                timerStarted: false,\r\n                err_reason: \"\",\r\n                url: '',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                hour: hour, \r\n                minute: minute, \r\n                second: second,\r\n                sfx: sfx, \r\n                timerStarted: true,\r\n                err_reason: \"\",\r\n                url: url,\r\n            });\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n            sfx: '',\r\n            timerStarted: false,\r\n            err_reason: \"\",\r\n            url: '',\r\n        })\r\n    }\r\n\r\n    navSubmit = element => {\r\n        this.setState({element: element});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () =>\r\n            this.tickdown(),\r\n            1000\r\n        );\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n    \r\n    tickdown() {\r\n        var second = this.state.second;\r\n        var minute = this.state.minute;\r\n        var hour = this.state.hour;\r\n        \r\n        if (second > 0) {\r\n            this.setState({second: second - 1});\r\n        } else if (minute > 0) {\r\n            this.setState({\r\n                minute: minute - 1,\r\n                second: 59,\r\n            });\r\n        } else if (hour > 0) {\r\n            this.setState({\r\n                hour: hour - 1,\r\n                minute: 59,\r\n                second: 59,\r\n            });\r\n        }\r\n\r\n        if (hour === 0 && minute === 0 && second === 0 && this.state.timerStarted) {\r\n            var sfxString = '';\r\n            if (this.state.sfx === \"bruh sound effect 2\") {\r\n                sfxString = \"https://www.myinstants.com/media/sounds/movie_1.mp3\";\r\n            } else if (this.state.sfx === \"how dare you\") {\r\n                sfxString = \"https://www.myinstants.com/media/sounds/howdareyou_1GuCHbh.mp3\"\r\n            } else if (this.state.sfx === \"hello there\") {\r\n                sfxString = \"https://www.myinstants.com/media/sounds/obi-wan-hello-there.mp3\";\r\n            } else if (this.state.sfx === \"custom\") {\r\n                sfxString = this.state.url;\r\n            }\r\n\r\n            let audio = new Audio(sfxString);\r\n            let audioPromise = audio.play();\r\n\r\n            if (audioPromise !== undefined) {\r\n                audioPromise\r\n                .then(() => {\r\n                    this.setState({\r\n                        sfx: '',\r\n                        timerStarted: false,\r\n                        url: '',\r\n                    })\r\n                })\r\n                .catch(err => \r\n                    this.setState({\r\n                        sfx: '',\r\n                        timerStarted: false,\r\n                        url: '',\r\n                        err_reason: \"Like, enter a valid sound URL or something. You're such a slob, b-baka!\"\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar navSubmit={this.navSubmit} />\r\n                <div className=\"w-100 padding-15\">\r\n                    <AppControl\r\n                        element={this.state.element}\r\n                        timerSubmit={this.timerSubmit}\r\n                        reset={this.reset}\r\n                        hour={this.state.hour}\r\n                        minute={this.state.minute}\r\n                        second={this.state.second}\r\n                        reason={this.state.err_reason}\r\n                    />\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}