{"version":3,"sources":["Clock.js","Timer.js","TimerForm.js","Error.js","App.js","index.js"],"names":["Clock","props","state","date","Date","this","clockID","setInterval","tick","clearInterval","setState","className","toLocaleDateString","toLocaleTimeString","Component","Timer","initialState","hour","minute","second","TimerForm","handleChange","event","target","name","value","submitTimerForm","timerSubmit","resetTimer","id","htmlFor","type","onChange","form","onClick","Error","reason","data-dismiss","aria-hidden","App","err_reason","timerID","tickdown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6df64c0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clockID = setInterval(\r\n            () => \r\n            this.tick(), \r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.clockID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-3\">\r\n                    {this.state.date.toLocaleDateString() \r\n                    + ' ' \r\n                    + this.state.date.toLocaleTimeString()}\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, {Component} from 'react';\r\n\r\nclass Timer extends Component {\r\n\r\n    initialState = {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second} = this.props;\r\n\r\n        return (\r\n            <h1 className=\"mb-3\">\r\n                {hour + \" Hours \" + \r\n                minute + \" Minutes \" +\r\n                second + \" Seconds\"}\r\n            </h1>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Timer;","import React, {Component} from 'react';\r\n\r\nclass TimerForm extends Component {\r\n\r\n    initialState = {\r\n        hour: 0,\r\n        minute: 0,\r\n        second: 0,\r\n    }\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitTimerForm = () => {\r\n        this.props.timerSubmit(this.state.hour, this.state.minute, this.state.second);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    resetTimer = () => {\r\n        this.setState(this.initialState);\r\n        this.props.timerSubmit(0,0,0);\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second} = this.state;\r\n\r\n        return (\r\n            <form id=\"timerForm\">\r\n                <label htmlFor=\"hour\">Hours</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control mb-2\"\r\n                    name=\"hour\"\r\n                    id=\"hour\"\r\n                    value={hour} \r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"minute\">Minutes</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control mb-2\"\r\n                    name=\"minute\"\r\n                    id=\"minute\"\r\n                    value={minute} \r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"second\">Seconds</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    name=\"second\"\r\n                    id=\"second\"\r\n                    value={second} \r\n                    onChange={this.handleChange} />\r\n                <div className=\"divider-v\"></div>\r\n                <div>\r\n                    <input \r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        value=\"Start timer\"\r\n                        form=\"timerForm\"\r\n                        onClick={this.submitTimerForm} />\r\n                    <div className=\"divider-h\"></div>\r\n                    <input \r\n                        type=\"button\" \r\n                        className=\"btn btn-secondary\"\r\n                        value=\"Reset\"\r\n                        onClick={this.resetTimer} />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimerForm;","import React, {Component} from 'react';\r\n\r\nclass Error extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            value: '',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.reason === \"\") {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-primary alert-dismissable fade show\">\r\n                    {this.props.reason}\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport Clock from './Clock';\r\nimport Timer from './Timer';\r\nimport TimerForm from './TimerForm';\r\nimport Error from './Error';\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0, \r\n            err_reason: '',\r\n        };\r\n    }\r\n\r\n    timerSubmit = (hour, minute, second) => {\r\n        if (hour < 0 || minute < 0 || second < 0) {\r\n            this.setState({\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0,\r\n                err_reason: \"Due to special relativity, negative time is not accepted as of this moment.\",\r\n            });\r\n        } else if (minute > 59 || second > 60) {\r\n            this.setState({\r\n                hour: 0,\r\n                minute: 0,\r\n                second: 0,\r\n                err_reason: \"Becaused we're civilized, we use the international standard notation for time here.\",\r\n            });\r\n        } else {\r\n            this.setState({\r\n                hour: hour, \r\n                minute: minute, \r\n                second: second, \r\n                err_reason: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () =>\r\n            this.tickdown(),\r\n            1000\r\n        );\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n    \r\n    tickdown() {\r\n        var second = this.state.second;\r\n        var minute = this.state.minute;\r\n        var hour = this.state.hour;\r\n        \r\n        if (second > 0) {\r\n            this.setState({second: second - 1});\r\n        } else if (minute > 0) {\r\n            this.setState({\r\n                minute: minute - 1,\r\n                second: 59,\r\n            });\r\n        } else if (hour > 0) {\r\n            this.setState({\r\n                hour: hour - 1,\r\n                minute: 59,\r\n                second: 59,\r\n            });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Clock />\r\n                <Timer hour={this.state.hour} minute={this.state.minute} second={this.state.second} />\r\n                <Error reason={this.state.err_reason} />\r\n                <TimerForm timerSubmit={this.timerSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}